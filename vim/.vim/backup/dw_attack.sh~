#! /bin/bash

coin_changed='true'
xp_changed='true'
mysterybox_checked='false'
coin_gethered=0
xp_gethered=0
level_hp=12000
level_final_strike=2000
demon_fight="false"
count=0
bank_time=0;
mode=$1

select_text()
{
  xdotool search --name "Play Dream World" mousemove --sync $1 $2
  xdotool search --name "Play Dream World" mousedown 1
  xdotool search --name "Play Dream World" mousemove --sync $3 $4
  xdotool search --name "Play Dream World" mouseup 1  
  sleep 0.20
  xdotool search --name "Play Dream World" click 1
}

reset_puzzlesolver()
{
  sleep 4
  click 173 206
  click 173 206
  click 430 350
  sleep 4
}

double_click()
{
  xdotool search --name "Play Dream World" mousemove $1 $2
  xdotool search --name "Play Dream World" click 1
  sleep 0.1
  xdotool search --name "Play Dream World" click 1
}

spell()
{
  check_mp $1
  xdotool search --name "Play Dream World" type $1

  key 's' "no_wait"
  [ "$2" == "no_wait"  ] || sleep 0.47
  sleep 0.1
  key 's' "no_wait"
}

check_mp()
{
  [ "$1" = "q" ] && level=1
  [ "$1" = "[" ] && level=45
  [ "$1" = "|" ] && level=60

  #double_click 763 256
  #cb=`xsel`
  cb=$skillpts
  if (( "$cb" < "$level" )) ; then
    use_fairydust
  fi
}

go_alien()
{
  # Town Map
  click 248 322
  sleep 3
  click 248 322

  # World Map
  click 797 356
  sleep 1

  # Junk Town Fight
  click 675 702
}

go_gate()
{
  #Town Map
  click 248 322

  # World Map
  click 797 356

  click 810 581
  [ "$1" == "fire" ] && click 223 559
  [ "$1" == "ice" ] && click 479 559
  [ "$1" == "thunder" ] && click 726 559
}

go_town()
{
  #Town Map
  click 248 322

  # World Map
  click 797 356

  click 762 616
  click 628 535
  click 581 588
  click 787 558
}

check_hp()
{
  
  #double_click 356 274
  #cb=`xsel`
  if (( "$hp" < "$level_hp" )) ; then
    spell '['
    echo true
    return
  fi
  echo false
}

check_final_strike()
{

  #double_click 603 386
  #cb=`xsel`
  (( "$enemy_hp" < "$level_final_strike" )) && spell '|' && echo false && return
  echo true
}

click()
{
  xdotool search --name "Play Dream World" mousemove $1 $2
  xdotool search --name "Play Dream World" click 1
  sleep 1
}

explore()
{
  xdotool search --name "Play Dream World" key  space
  sleep 0.5
}

key()
{
  if  [ "$2" == "no_wait" ] ; then
    xdotool search --name "Play Dream World" key $1
  else
    xdotool search --name "Play Dream World" key --delay 300 $1
  fi
}

bank()
{
  #if [ $bank_time -eq 10 ] ; then
    #bank_time=0
    key 'b'
    key 'c'
  #else
    #let bank_time=$(( bank_time + 1 ))
  #fi
}

take_fd_from_storage()
{
  sleep 2
  # Bank
  click 385 351
  
  dust_number=$(check_fairydust)
  if [ "$dust_number" -gt '0' ] ; then
    x=337
    y=$(( 560 + $((--dust_number)) * 45 ))
    click $x $y
    echo true
    return
  fi
  echo false
}

parse_data()
{
  select_text 102 244 857 456

  cb=`xsel|tr -d [:cntrl:] | tr -d [:space:]`
#echo xxx $cb xxx
  # name, level, hp, xp, coins, energy, gems, skillpts, attack, defense, equipment, inventory, enemy, enemy_level, enemy_hp, story
  header_regex="CharacterPicture(.*)Lv(.*)DivineStaffHealthHP(.*)ExpExp(.*)%coinsCoins(.*)EnergyEnergy(.*)/.*gemsGems(.*)DefenseSkillPts(.*)/.*AttackAttack(.*)DefenseDefense(.*)HomeTownMapCharacterInventoryQuestsGuildRankingsGuardian"
  equipment_regex="HomeTownMapCharacterInventoryQuestsGuildRankingsGuardian(Equipment.*)(Inventory.*)PetPicture"
  inventory_regex="(Inventory.*)Pet"
  enemy_regex="Happy.*Exp.*%(.*)Lv(.*)HP(.*)monster(.*)Auto"
  boss_regex="Happy.*Exp.*%(.*)Lv(.*)HP(.*)boss(.*)Auto"
  puzzle_state_regex="Guardian(.*)Equipment"
  encounter_state_regex="Happy.*%Exp.*%(.*)"
  won_regex="Youreceived(.*)coins.*Youreceived(.*)experience"

  if [[ $cb =~ $header_regex ]] ; then
    name=${BASH_REMATCH[1]}
    level=${BASH_REMATCH[2]}
    hp=${BASH_REMATCH[3]}
    xp=`echo ${BASH_REMATCH[4]} | tr -d ","`
    #xp=${BASH_REMATCH[4]}
    coin=`echo ${BASH_REMATCH[5]} | tr -d ","`
    #coins=${BASH_REMATCH[5]}
    energy=${BASH_REMATCH[6]}
    gems=${BASH_REMATCH[7]}
    skillpts=${BASH_REMATCH[8]}
    attack=${BASH_REMATCH[9]}
    defense=${BASH_REMATCH[10]}
  fi

  if [[ $cb =~ $equipment_regex ]] ; then
    equipment=${BASH_REMATCH[1]}
  fi

  if [[ $cb =~ $inventory_regex ]] ; then
    inventory=${BASH_REMATCH[1]}
  fi

  if [[ $cb =~ $puzzle_state_regex ]] ; then
    state=${BASH_REMATCH[1]}

    [[ -n "$state" ]] && [[ $cb =~ $encounter_state_regex ]] && state="$state ${BASH_REMATCH[1]}"
  fi

  if [[ $cb =~ $enemy_regex ]] || [[ $cb =~ $boss_regex ]] ; then
   state=${BASH_REMATCH[1]}
   enemy_level=${BASH_REMATCH[2]}
   enemy_hp=${BASH_REMATCH[3]}
   story=${BASH_REMATCH[4]}
  fi

  if [[ $cb =~ $won_regex ]] ; then
    state="Fight won"

    coin_get=`echo ${BASH_REMATCH[1]} | tr -d ","`
    xp_get=`echo ${BASH_REMATCH[2]} | tr -d ","`
    $coin_changed && ((coin_gethered+=$coin_get)) && coin_changed='false'
    $xp_changed && ((xp_gethered+=$xp_get)) && xp_changed='false'
  fi
  echo $state
}


check_state()
{
  ret=0

  # Encounter
  cb=$state
  if [ -n "$(echo $cb | grep "Encounter")" ] ; then
    if [ -n "$(echo $cb | egrep "DustMerchant|MagicElf|GirlinRed|GuardianofDreams")" ]; then
      ret=1
    elif [ -n "$(echo $cb | egrep "thiefguard|ENRAGEDthiefshamani|Alien|ice|thunder|fire|ENRAGEDthiefspecialist|Gnome")" ]; then
      ret=17
    else
      ret=16
      fi
  elif [ -n "$(echo $cb | egrep  "TheMarsh|TheSewers|TheForest|Thieves")" ]; then
    if [ -n "$(echo $cb | grep  "APuzzleBox")" ]; then
      ret=2
    elif [ -n "$(echo $cb | grep  "MagicMushrooms")" ]; then
      ret=3
    elif [ -n "$(echo $cb | grep  "WishingWell")" ]; then
      ret=4
    elif [ -n "$(echo $cb | grep  "TheWiseman")" ]; then
      ret=5
    elif [ -n "$(echo $cb | grep  "ATreasureMap")" ]; then
      ret=6
    elif [ -n "$(echo $cb | grep  "ATreasureChest")" ]; then
      ret=7
    elif [ -n "$(echo $cb | grep  "LittleImp")" ]; then
      ret=8
    elif [ -n "$(echo $cb | grep  "DustMerchant")" ]; then
      ret=9
    elif [ -n "$(echo $cb | grep  "TheGambler")" ]; then
      ret=10
    elif [ -n "$(echo $cb | grep  "MagicElf")" ]; then
      ret=11
    elif [ -n "$(echo $cb | grep  "ABeggar")" ]; then
      ret=12
    elif [ -n "$(echo $cb | grep  "GuardianofDream")" ]; then
      ret=14
    elif [ -n "$(echo $cb | grep  "entervalidamount")" ]; then
      ret=15
    elif [ $cb -z ] ; then
      sleep 5
      key 'c'
      explore
    fi
  elif [ -n "$(echo $cb | egrep  "RatDemon|emonCaptain|DemonCaptain|emonLeader")" ]; then
    ret=13
  elif [ -n "$(echo $cb | egrep  "Boss")" ]; then
    ret=17
  elif [ "$cb" == "Fight won" ] ; then
    ret=18
  fi

  [[ "$ret" -ne '13' ]] && [[ "ret" -ne '0' ]] && demon_fight="false"
  [[ "$ret" -ne '18' ]] && [[ "ret" -ne '0' ]] && coin_changed='true' && xp_changed='true'
  [[ "$ret" -ne '0' ]] && count=0 && return $ret

  echo ERROR: Unrecognizable state: $cb
  return 0
}

handle_mushroom()
{
  # Taste
  click 716 476
  # Explore
  explore
}

handle_puzzlebox()
{
  reset_puzzlesolver
  explore
}

handle_whishingwell()
{
  # High
  click 685 528
  explore
}

handle_treasuremap()
{
  # Find
  click 716 552
  explore
}

handle_treasurechest()
{
  reset_puzzlesolver
  explore
}   

handle_wiseman()
{
  # Accept
  click 713 491
  explore
}

handle_encounter()
{
  count=0
  #check_mp
  
  [ "$1" = "spell" ] && $(check_final_strike) && spell 'q' "no_wait"
  [ "$1" = "recover" ] && spell '|'
  [ "$1" = "hit" ] && key 'a' "no_wait"
}

handle_gambler()
{
  # Fight
  click 721 623
}

handle_magicelf()
{
  # Fight
  click 717 650
}

handle_beggar()
{
  # High
  click 680 525
  explore
}

handle_dustmerchant()
{
  # Fight
  click 717 652
}

handle_littleimp()
{
  # Accept
  click 716 534
  explore
}

handle_ratdemon()
{
  if $demon_fight ; then
    handle_encounter "recover"
    return
  fi

  demon_fight="true"
  get_number_of_fd 
  if [ "$?" -lt '4' ] ; then
    # Run Away
    click 797 400
    # Ok
    #click 442 469
    #explore
    exit
    demon_fight="false"
  fi
}

handle_validamount()
{
  # Close
  click 480 475
}

put_fd_to_store()
{
  key 'n'
  sleep 1

  c=0
  while [[ "$c" -lt "5" ]]
  do
    double_click 436 577
    sleep 0.5
    ((c++))
  done

  c=0
  while [[ "$c" -lt "5" ]]
  do
    double_click 436 555
    sleep 0.5
    ((c++))
  done

  key 'c'
}

buy_fairydust()
{
  dust_to_buy=$1

  # Town Map
  click 248 322
  click 248 322

  # World Map
  click 797 356

  # Junktown
  click 608 657

  # Shop
  click 343 447

  bought_dust=0
  while (( dust_to_buy > 0 ))
  do
    #[ "$bought_dust" -ge '5' ] && put_fd_to_store && bought_dust=0
    # Buy
    click 825 555
    (( dust_to_buy-- )) 
    (( bought_dust++ )) 
  done

  # Restore full health
  click 819 664  
}

check_fairydust()
{
  sleep 0.1
  select_text 102 244 857 345
  cb=`xsel|tr -d [:cntrl:] | tr -d [:space:]`
  sleep 0.2
 regex10="StorageGun(fairydust)Use"
  regex9="StorageGun(.*)Gun(fairydust)Use"
  regex8="StorageGun(.*)Gun(.*)Gun(fairydust)Use"
  regex7="StorageGun(.*)Gun(.*)Gun(.*)Gun(fairydust)Use"
  regex6="StorageGun(.*)Gun(.*)Gun(.*)Gun(.*)Gun(fairydust)Use"
  regex5="InventoryItem(fairydust)Use"
  regex4="InventoryItem(.*)Item(fairydust)Use"
  regex3="InventoryItem(.*)Item(.*)Item(fairydust)Use"
  regex2="InventoryItem(.*)Item(.*)Item(.*)Item(fairydust)Use"
  regex1="InventoryItem(.*)Item(.*)Item(.*)Item(.*)Item(fairydust)Use"

  if [[ $cb =~ $regex1 ]] || [[ $cb =~ $regex2 ]] || [[ $cb =~ $regex3 ]] || [[ $cb =~ $regex4 ]] || [[ $cb =~ $regex5 ]] ||
   [[ $cb =~ $regex6 ]] || [[ $cb =~ $regex7 ]] || [[ $cb =~ $regex8 ]] || [[ $cb =~ $regex9 ]] || [[ $cb =~ $regex10 ]] ; then
    return $((${#BASH_REMATCH[*]}-1))
  fi
}

use_fairydust()
{
  key 'n'
  sleep 1
  dust_number=$(check_fairydust)
  if [ "$dust_number" -gt '0' ] ; then
    key $dust_number
    # Close
    key 'c'
    key 'c'
  elif $(take_fd_from_storage) ; then key 'c'
  else
    buy_fairydust 10
    use_fairydust

    # Buy again
    #click 821 555

    # max Energy
    [[ "$xp" -le "90" ]] && [[ "$coin" -gt "1000000000" ]] && click 819 520

    #go_gate "ice" # Lysiana=ice

    go_alien "junktown"
  fi
}

get_number_of_fd()
{
  # Inventory
  key 'n'
  sleep 0.5
  inventory=$(check_fairydust)
  
  # Bank
  #click 385 351
  #storage=$(check_fairydust)
  #ret=$(( $inventory + $storage ))

  key 'c'
  return $ret

}

handle_won()
{
  echo Fight won
  echo Now gethered coin: $coin_get xp: $xp_get
  echo Total gethered coin: $coin_gethered xp: $xp_gethered
  explore "no_wait"
}

handle_guardianofdreams()
{
  # Fight
  click 707 547
}

check_mysterybox()
{
  min=`date +%M`
  #if (( min = "53" )) ; then
  if [[ "$mysterybox_checked" = "false" ]] && [[ "$min" = "05" ]] ; then
    mysterybox_checked='true'
    
    click 794 319
    key 'c'
    key 'c'
    key 'c'
  else
    mysterybox_checked='false'
  fi
}

sleep 1
while [ -z "$mode" ]
do
  sleep 0.5

  key 'c' "no_wait"
  #bank

  check_mysterybox

  parse_data
  echo $xp
  $(check_hp) && continue

  check_state 
  ret_val=$?
  if [ "$ret_val"  -eq '1' ]; then
    handle_encounter "hit"
  elif [ "$ret_val"  -eq '2' ]; then
    handle_puzzlebox
  elif [ "$ret_val"  -eq '3' ]; then
    handle_mushroom
  elif [ "$ret_val"  -eq '4' ]; then
    handle_whishingwell
  elif [ "$ret_val"  -eq '5' ]; then
    handle_wiseman
  elif [ "$ret_val"  -eq '6' ]; then
    handle_treasuremap
  elif [ "$ret_val"  -eq '7' ]; then
    handle_treasurechest
  elif [ "$ret_val"  -eq '8' ]; then
    handle_littleimp
  elif [ "$ret_val"  -eq '9' ]; then
    handle_dustmerchant
  elif [ "$ret_val"  -eq '10' ]; then
    handle_gambler
  elif [ "$ret_val"  -eq '11' ]; then
    handle_magicelf
  elif [ "$ret_val"  -eq '12' ]; then
    handle_beggar
  elif [ "$ret_val"  -eq '13' ]; then
    handle_ratdemon
  elif [ "$ret_val"  -eq '14' ]; then
    handle_guardianofdreams
  elif [ "$ret_val"  -eq '15' ]; then
    handle_validamount
  elif [ "$ret_val"  -eq '16' ]; then
    handle_encounter "spell"
  elif [ "$ret_val"  -eq '17' ]; then
    handle_encounter "recover"
  elif [ "$ret_val"  -eq '18' ]; then
    handle_won
  else
    echo ERROR: wrong state number: $ret_val
    if [ "$count" -eq '10' ]; then
      exit
    else
      ((count++))
    fi
  fi
done


while [ "$mode" = "test" ]
do
  sleep 1
    #buy_fairydust 10

  put_fd_to_store
echo ati debug: $?

done

while [ "$mode" = "boss" ]
do
  sleep 0.1
  key 'space' "no_wait"

  $(check_hp) && continue
  $(check_final_strike) && spell '|'
done
